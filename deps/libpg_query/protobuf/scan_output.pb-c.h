/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: protobuf/scan_output.proto */

#ifndef PROTOBUF_C_protobuf_2fscan_5foutput_2eproto__INCLUDED
#define PROTOBUF_C_protobuf_2fscan_5foutput_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Pgquery__ScanToken Pgquery__ScanToken;
typedef struct _Pgquery__ScanOutput Pgquery__ScanOutput;


/* --- enums --- */

typedef enum _Pgquery__KeywordKind {
  PGQUERY__KEYWORD_KIND__NO_KEYWORD = 0,
  PGQUERY__KEYWORD_KIND__UNRESERVED_KEYWORD = 1,
  PGQUERY__KEYWORD_KIND__COL_NAME_KEYWORD = 2,
  PGQUERY__KEYWORD_KIND__TYPE_FUNC_NAME_KEYWORD = 3,
  PGQUERY__KEYWORD_KIND__RESERVED_KEYWORD = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PGQUERY__KEYWORD_KIND)
} Pgquery__KeywordKind;
typedef enum _Pgquery__Token {
  PGQUERY__TOKEN__NUL = 0,
  PGQUERY__TOKEN__IDENT = 258,
  PGQUERY__TOKEN__FCONST = 259,
  PGQUERY__TOKEN__SCONST = 260,
  PGQUERY__TOKEN__BCONST = 261,
  PGQUERY__TOKEN__XCONST = 262,
  PGQUERY__TOKEN__Op = 263,
  PGQUERY__TOKEN__ICONST = 264,
  PGQUERY__TOKEN__PARAM = 265,
  PGQUERY__TOKEN__TYPECAST = 266,
  PGQUERY__TOKEN__DOT_DOT = 267,
  PGQUERY__TOKEN__COLON_EQUALS = 268,
  PGQUERY__TOKEN__EQUALS_GREATER = 269,
  PGQUERY__TOKEN__LESS_EQUALS = 270,
  PGQUERY__TOKEN__GREATER_EQUALS = 271,
  PGQUERY__TOKEN__NOT_EQUALS = 272,
  PGQUERY__TOKEN__ABORT_P = 273,
  PGQUERY__TOKEN__ABSOLUTE_P = 274,
  PGQUERY__TOKEN__ACCESS = 275,
  PGQUERY__TOKEN__ACTION = 276,
  PGQUERY__TOKEN__ADD_P = 277,
  PGQUERY__TOKEN__ADMIN = 278,
  PGQUERY__TOKEN__AFTER = 279,
  PGQUERY__TOKEN__AGGREGATE = 280,
  PGQUERY__TOKEN__ALL = 281,
  PGQUERY__TOKEN__ALSO = 282,
  PGQUERY__TOKEN__ALTER = 283,
  PGQUERY__TOKEN__ALWAYS = 284,
  PGQUERY__TOKEN__ANALYSE = 285,
  PGQUERY__TOKEN__ANALYZE = 286,
  PGQUERY__TOKEN__AND = 287,
  PGQUERY__TOKEN__ANY = 288,
  PGQUERY__TOKEN__ARRAY = 289,
  PGQUERY__TOKEN__AS = 290,
  PGQUERY__TOKEN__ASC = 291,
  PGQUERY__TOKEN__ASSERTION = 292,
  PGQUERY__TOKEN__ASSIGNMENT = 293,
  PGQUERY__TOKEN__ASYMMETRIC = 294,
  PGQUERY__TOKEN__AT = 295,
  PGQUERY__TOKEN__ATTACH = 296,
  PGQUERY__TOKEN__ATTRIBUTE = 297,
  PGQUERY__TOKEN__AUTHORIZATION = 298,
  PGQUERY__TOKEN__BACKWARD = 299,
  PGQUERY__TOKEN__BEFORE = 300,
  PGQUERY__TOKEN__BEGIN_P = 301,
  PGQUERY__TOKEN__BETWEEN = 302,
  PGQUERY__TOKEN__BIGINT = 303,
  PGQUERY__TOKEN__BINARY = 304,
  PGQUERY__TOKEN__BIT = 305,
  PGQUERY__TOKEN__BOOLEAN_P = 306,
  PGQUERY__TOKEN__BOTH = 307,
  PGQUERY__TOKEN__BY = 308,
  PGQUERY__TOKEN__CACHE = 309,
  PGQUERY__TOKEN__CALLED = 310,
  PGQUERY__TOKEN__CASCADE = 311,
  PGQUERY__TOKEN__CASCADED = 312,
  PGQUERY__TOKEN__CASE = 313,
  PGQUERY__TOKEN__CAST = 314,
  PGQUERY__TOKEN__CATALOG_P = 315,
  PGQUERY__TOKEN__CHAIN = 316,
  PGQUERY__TOKEN__CHAR_P = 317,
  PGQUERY__TOKEN__CHARACTER = 318,
  PGQUERY__TOKEN__CHARACTERISTICS = 319,
  PGQUERY__TOKEN__CHECK = 320,
  PGQUERY__TOKEN__CHECKPOINT = 321,
  PGQUERY__TOKEN__CLASS = 322,
  PGQUERY__TOKEN__CLOSE = 323,
  PGQUERY__TOKEN__CLUSTER = 324,
  PGQUERY__TOKEN__COALESCE = 325,
  PGQUERY__TOKEN__COLLATE = 326,
  PGQUERY__TOKEN__COLLATION = 327,
  PGQUERY__TOKEN__COLUMN = 328,
  PGQUERY__TOKEN__COLUMNS = 329,
  PGQUERY__TOKEN__COMMENT = 330,
  PGQUERY__TOKEN__COMMENTS = 331,
  PGQUERY__TOKEN__COMMIT = 332,
  PGQUERY__TOKEN__COMMITTED = 333,
  PGQUERY__TOKEN__CONCURRENTLY = 334,
  PGQUERY__TOKEN__CONFIGURATION = 335,
  PGQUERY__TOKEN__CONFLICT = 336,
  PGQUERY__TOKEN__CONNECTION = 337,
  PGQUERY__TOKEN__CONSTRAINT = 338,
  PGQUERY__TOKEN__CONSTRAINTS = 339,
  PGQUERY__TOKEN__CONTENT_P = 340,
  PGQUERY__TOKEN__CONTINUE_P = 341,
  PGQUERY__TOKEN__CONVERSION_P = 342,
  PGQUERY__TOKEN__COPY = 343,
  PGQUERY__TOKEN__COST = 344,
  PGQUERY__TOKEN__CREATE = 345,
  PGQUERY__TOKEN__CROSS = 346,
  PGQUERY__TOKEN__CSV = 347,
  PGQUERY__TOKEN__CUBE = 348,
  PGQUERY__TOKEN__CURRENT_P = 349,
  PGQUERY__TOKEN__CURRENT_CATALOG = 350,
  PGQUERY__TOKEN__CURRENT_DATE = 351,
  PGQUERY__TOKEN__CURRENT_ROLE = 352,
  PGQUERY__TOKEN__CURRENT_SCHEMA = 353,
  PGQUERY__TOKEN__CURRENT_TIME = 354,
  PGQUERY__TOKEN__CURRENT_TIMESTAMP = 355,
  PGQUERY__TOKEN__CURRENT_USER = 356,
  PGQUERY__TOKEN__CURSOR = 357,
  PGQUERY__TOKEN__CYCLE = 358,
  PGQUERY__TOKEN__DATA_P = 359,
  PGQUERY__TOKEN__DATABASE = 360,
  PGQUERY__TOKEN__DAY_P = 361,
  PGQUERY__TOKEN__DEALLOCATE = 362,
  PGQUERY__TOKEN__DEC = 363,
  PGQUERY__TOKEN__DECIMAL_P = 364,
  PGQUERY__TOKEN__DECLARE = 365,
  PGQUERY__TOKEN__DEFAULT = 366,
  PGQUERY__TOKEN__DEFAULTS = 367,
  PGQUERY__TOKEN__DEFERRABLE = 368,
  PGQUERY__TOKEN__DEFERRED = 369,
  PGQUERY__TOKEN__DEFINER = 370,
  PGQUERY__TOKEN__DELETE_P = 371,
  PGQUERY__TOKEN__DELIMITER = 372,
  PGQUERY__TOKEN__DELIMITERS = 373,
  PGQUERY__TOKEN__DEPENDS = 374,
  PGQUERY__TOKEN__DESC = 375,
  PGQUERY__TOKEN__DETACH = 376,
  PGQUERY__TOKEN__DICTIONARY = 377,
  PGQUERY__TOKEN__DISABLE_P = 378,
  PGQUERY__TOKEN__DISCARD = 379,
  PGQUERY__TOKEN__DISTINCT = 380,
  PGQUERY__TOKEN__DO = 381,
  PGQUERY__TOKEN__DOCUMENT_P = 382,
  PGQUERY__TOKEN__DOMAIN_P = 383,
  PGQUERY__TOKEN__DOUBLE_P = 384,
  PGQUERY__TOKEN__DROP = 385,
  PGQUERY__TOKEN__EACH = 386,
  PGQUERY__TOKEN__ELSE = 387,
  PGQUERY__TOKEN__ENABLE_P = 388,
  PGQUERY__TOKEN__ENCODING = 389,
  PGQUERY__TOKEN__ENCRYPTED = 390,
  PGQUERY__TOKEN__END_P = 391,
  PGQUERY__TOKEN__ENUM_P = 392,
  PGQUERY__TOKEN__ESCAPE = 393,
  PGQUERY__TOKEN__EVENT = 394,
  PGQUERY__TOKEN__EXCEPT = 395,
  PGQUERY__TOKEN__EXCLUDE = 396,
  PGQUERY__TOKEN__EXCLUDING = 397,
  PGQUERY__TOKEN__EXCLUSIVE = 398,
  PGQUERY__TOKEN__EXECUTE = 399,
  PGQUERY__TOKEN__EXISTS = 400,
  PGQUERY__TOKEN__EXPLAIN = 401,
  PGQUERY__TOKEN__EXTENSION = 402,
  PGQUERY__TOKEN__EXTERNAL = 403,
  PGQUERY__TOKEN__EXTRACT = 404,
  PGQUERY__TOKEN__FALSE_P = 405,
  PGQUERY__TOKEN__FAMILY = 406,
  PGQUERY__TOKEN__FETCH = 407,
  PGQUERY__TOKEN__FILTER = 408,
  PGQUERY__TOKEN__FIRST_P = 409,
  PGQUERY__TOKEN__FLOAT_P = 410,
  PGQUERY__TOKEN__FOLLOWING = 411,
  PGQUERY__TOKEN__FOR = 412,
  PGQUERY__TOKEN__FORCE = 413,
  PGQUERY__TOKEN__FOREIGN = 414,
  PGQUERY__TOKEN__FORWARD = 415,
  PGQUERY__TOKEN__FREEZE = 416,
  PGQUERY__TOKEN__FROM = 417,
  PGQUERY__TOKEN__FULL = 418,
  PGQUERY__TOKEN__FUNCTION = 419,
  PGQUERY__TOKEN__FUNCTIONS = 420,
  PGQUERY__TOKEN__GENERATED = 421,
  PGQUERY__TOKEN__GLOBAL = 422,
  PGQUERY__TOKEN__GRANT = 423,
  PGQUERY__TOKEN__GRANTED = 424,
  PGQUERY__TOKEN__GREATEST = 425,
  PGQUERY__TOKEN__GROUP_P = 426,
  PGQUERY__TOKEN__GROUPING = 427,
  PGQUERY__TOKEN__HANDLER = 428,
  PGQUERY__TOKEN__HAVING = 429,
  PGQUERY__TOKEN__HEADER_P = 430,
  PGQUERY__TOKEN__HOLD = 431,
  PGQUERY__TOKEN__HOUR_P = 432,
  PGQUERY__TOKEN__IDENTITY_P = 433,
  PGQUERY__TOKEN__IF_P = 434,
  PGQUERY__TOKEN__ILIKE = 435,
  PGQUERY__TOKEN__IMMEDIATE = 436,
  PGQUERY__TOKEN__IMMUTABLE = 437,
  PGQUERY__TOKEN__IMPLICIT_P = 438,
  PGQUERY__TOKEN__IMPORT_P = 439,
  PGQUERY__TOKEN__IN_P = 440,
  PGQUERY__TOKEN__INCLUDING = 441,
  PGQUERY__TOKEN__INCREMENT = 442,
  PGQUERY__TOKEN__INDEX = 443,
  PGQUERY__TOKEN__INDEXES = 444,
  PGQUERY__TOKEN__INHERIT = 445,
  PGQUERY__TOKEN__INHERITS = 446,
  PGQUERY__TOKEN__INITIALLY = 447,
  PGQUERY__TOKEN__INLINE_P = 448,
  PGQUERY__TOKEN__INNER_P = 449,
  PGQUERY__TOKEN__INOUT = 450,
  PGQUERY__TOKEN__INPUT_P = 451,
  PGQUERY__TOKEN__INSENSITIVE = 452,
  PGQUERY__TOKEN__INSERT = 453,
  PGQUERY__TOKEN__INSTEAD = 454,
  PGQUERY__TOKEN__INT_P = 455,
  PGQUERY__TOKEN__INTEGER = 456,
  PGQUERY__TOKEN__INTERSECT = 457,
  PGQUERY__TOKEN__INTERVAL = 458,
  PGQUERY__TOKEN__INTO = 459,
  PGQUERY__TOKEN__INVOKER = 460,
  PGQUERY__TOKEN__IS = 461,
  PGQUERY__TOKEN__ISNULL = 462,
  PGQUERY__TOKEN__ISOLATION = 463,
  PGQUERY__TOKEN__JOIN = 464,
  PGQUERY__TOKEN__KEY = 465,
  PGQUERY__TOKEN__LABEL = 466,
  PGQUERY__TOKEN__LANGUAGE = 467,
  PGQUERY__TOKEN__LARGE_P = 468,
  PGQUERY__TOKEN__LAST_P = 469,
  PGQUERY__TOKEN__LATERAL_P = 470,
  PGQUERY__TOKEN__LEADING = 471,
  PGQUERY__TOKEN__LEAKPROOF = 472,
  PGQUERY__TOKEN__LEAST = 473,
  PGQUERY__TOKEN__LEFT = 474,
  PGQUERY__TOKEN__LEVEL = 475,
  PGQUERY__TOKEN__LIKE = 476,
  PGQUERY__TOKEN__LIMIT = 477,
  PGQUERY__TOKEN__LISTEN = 478,
  PGQUERY__TOKEN__LOAD = 479,
  PGQUERY__TOKEN__LOCAL = 480,
  PGQUERY__TOKEN__LOCALTIME = 481,
  PGQUERY__TOKEN__LOCALTIMESTAMP = 482,
  PGQUERY__TOKEN__LOCATION = 483,
  PGQUERY__TOKEN__LOCK_P = 484,
  PGQUERY__TOKEN__LOCKED = 485,
  PGQUERY__TOKEN__LOGGED = 486,
  PGQUERY__TOKEN__MAPPING = 487,
  PGQUERY__TOKEN__MATCH = 488,
  PGQUERY__TOKEN__MATERIALIZED = 489,
  PGQUERY__TOKEN__MAXVALUE = 490,
  PGQUERY__TOKEN__METHOD = 491,
  PGQUERY__TOKEN__MINUTE_P = 492,
  PGQUERY__TOKEN__MINVALUE = 493,
  PGQUERY__TOKEN__MODE = 494,
  PGQUERY__TOKEN__MONTH_P = 495,
  PGQUERY__TOKEN__MOVE = 496,
  PGQUERY__TOKEN__NAME_P = 497,
  PGQUERY__TOKEN__NAMES = 498,
  PGQUERY__TOKEN__NATIONAL = 499,
  PGQUERY__TOKEN__NATURAL = 500,
  PGQUERY__TOKEN__NCHAR = 501,
  PGQUERY__TOKEN__NEW = 502,
  PGQUERY__TOKEN__NEXT = 503,
  PGQUERY__TOKEN__NO = 504,
  PGQUERY__TOKEN__NONE = 505,
  PGQUERY__TOKEN__NOT = 506,
  PGQUERY__TOKEN__NOTHING = 507,
  PGQUERY__TOKEN__NOTIFY = 508,
  PGQUERY__TOKEN__NOTNULL = 509,
  PGQUERY__TOKEN__NOWAIT = 510,
  PGQUERY__TOKEN__NULL_P = 511,
  PGQUERY__TOKEN__NULLIF = 512,
  PGQUERY__TOKEN__NULLS_P = 513,
  PGQUERY__TOKEN__NUMERIC = 514,
  PGQUERY__TOKEN__OBJECT_P = 515,
  PGQUERY__TOKEN__OF = 516,
  PGQUERY__TOKEN__OFF = 517,
  PGQUERY__TOKEN__OFFSET = 518,
  PGQUERY__TOKEN__OIDS = 519,
  PGQUERY__TOKEN__OLD = 520,
  PGQUERY__TOKEN__ON = 521,
  PGQUERY__TOKEN__ONLY = 522,
  PGQUERY__TOKEN__OPERATOR = 523,
  PGQUERY__TOKEN__OPTION = 524,
  PGQUERY__TOKEN__OPTIONS = 525,
  PGQUERY__TOKEN__OR = 526,
  PGQUERY__TOKEN__ORDER = 527,
  PGQUERY__TOKEN__ORDINALITY = 528,
  PGQUERY__TOKEN__OUT_P = 529,
  PGQUERY__TOKEN__OUTER_P = 530,
  PGQUERY__TOKEN__OVER = 531,
  PGQUERY__TOKEN__OVERLAPS = 532,
  PGQUERY__TOKEN__OVERLAY = 533,
  PGQUERY__TOKEN__OVERRIDING = 534,
  PGQUERY__TOKEN__OWNED = 535,
  PGQUERY__TOKEN__OWNER = 536,
  PGQUERY__TOKEN__PARALLEL = 537,
  PGQUERY__TOKEN__PARSER = 538,
  PGQUERY__TOKEN__PARTIAL = 539,
  PGQUERY__TOKEN__PARTITION = 540,
  PGQUERY__TOKEN__PASSING = 541,
  PGQUERY__TOKEN__PASSWORD = 542,
  PGQUERY__TOKEN__PLACING = 543,
  PGQUERY__TOKEN__PLANS = 544,
  PGQUERY__TOKEN__POLICY = 545,
  PGQUERY__TOKEN__POSITION = 546,
  PGQUERY__TOKEN__PRECEDING = 547,
  PGQUERY__TOKEN__PRECISION = 548,
  PGQUERY__TOKEN__PRESERVE = 549,
  PGQUERY__TOKEN__PREPARE = 550,
  PGQUERY__TOKEN__PREPARED = 551,
  PGQUERY__TOKEN__PRIMARY = 552,
  PGQUERY__TOKEN__PRIOR = 553,
  PGQUERY__TOKEN__PRIVILEGES = 554,
  PGQUERY__TOKEN__PROCEDURAL = 555,
  PGQUERY__TOKEN__PROCEDURE = 556,
  PGQUERY__TOKEN__PROGRAM = 557,
  PGQUERY__TOKEN__PUBLICATION = 558,
  PGQUERY__TOKEN__QUOTE = 559,
  PGQUERY__TOKEN__RANGE = 560,
  PGQUERY__TOKEN__READ = 561,
  PGQUERY__TOKEN__REAL = 562,
  PGQUERY__TOKEN__REASSIGN = 563,
  PGQUERY__TOKEN__RECHECK = 564,
  PGQUERY__TOKEN__RECURSIVE = 565,
  PGQUERY__TOKEN__REF = 566,
  PGQUERY__TOKEN__REFERENCES = 567,
  PGQUERY__TOKEN__REFERENCING = 568,
  PGQUERY__TOKEN__REFRESH = 569,
  PGQUERY__TOKEN__REINDEX = 570,
  PGQUERY__TOKEN__RELATIVE_P = 571,
  PGQUERY__TOKEN__RELEASE = 572,
  PGQUERY__TOKEN__RENAME = 573,
  PGQUERY__TOKEN__REPEATABLE = 574,
  PGQUERY__TOKEN__REPLACE = 575,
  PGQUERY__TOKEN__REPLICA = 576,
  PGQUERY__TOKEN__RESET = 577,
  PGQUERY__TOKEN__RESTART = 578,
  PGQUERY__TOKEN__RESTRICT = 579,
  PGQUERY__TOKEN__RETURNING = 580,
  PGQUERY__TOKEN__RETURNS = 581,
  PGQUERY__TOKEN__REVOKE = 582,
  PGQUERY__TOKEN__RIGHT = 583,
  PGQUERY__TOKEN__ROLE = 584,
  PGQUERY__TOKEN__ROLLBACK = 585,
  PGQUERY__TOKEN__ROLLUP = 586,
  PGQUERY__TOKEN__ROW = 587,
  PGQUERY__TOKEN__ROWS = 588,
  PGQUERY__TOKEN__RULE = 589,
  PGQUERY__TOKEN__SAVEPOINT = 590,
  PGQUERY__TOKEN__SCHEMA = 591,
  PGQUERY__TOKEN__SCHEMAS = 592,
  PGQUERY__TOKEN__SCROLL = 593,
  PGQUERY__TOKEN__SEARCH = 594,
  PGQUERY__TOKEN__SECOND_P = 595,
  PGQUERY__TOKEN__SECURITY = 596,
  PGQUERY__TOKEN__SELECT = 597,
  PGQUERY__TOKEN__SEQUENCE = 598,
  PGQUERY__TOKEN__SEQUENCES = 599,
  PGQUERY__TOKEN__SERIALIZABLE = 600,
  PGQUERY__TOKEN__SERVER = 601,
  PGQUERY__TOKEN__SESSION = 602,
  PGQUERY__TOKEN__SESSION_USER = 603,
  PGQUERY__TOKEN__SET = 604,
  PGQUERY__TOKEN__SETS = 605,
  PGQUERY__TOKEN__SETOF = 606,
  PGQUERY__TOKEN__SHARE = 607,
  PGQUERY__TOKEN__SHOW = 608,
  PGQUERY__TOKEN__SIMILAR = 609,
  PGQUERY__TOKEN__SIMPLE = 610,
  PGQUERY__TOKEN__SKIP = 611,
  PGQUERY__TOKEN__SMALLINT = 612,
  PGQUERY__TOKEN__SNAPSHOT = 613,
  PGQUERY__TOKEN__SOME = 614,
  PGQUERY__TOKEN__SQL_P = 615,
  PGQUERY__TOKEN__STABLE = 616,
  PGQUERY__TOKEN__STANDALONE_P = 617,
  PGQUERY__TOKEN__START = 618,
  PGQUERY__TOKEN__STATEMENT = 619,
  PGQUERY__TOKEN__STATISTICS = 620,
  PGQUERY__TOKEN__STDIN = 621,
  PGQUERY__TOKEN__STDOUT = 622,
  PGQUERY__TOKEN__STORAGE = 623,
  PGQUERY__TOKEN__STRICT_P = 624,
  PGQUERY__TOKEN__STRIP_P = 625,
  PGQUERY__TOKEN__SUBSCRIPTION = 626,
  PGQUERY__TOKEN__SUBSTRING = 627,
  PGQUERY__TOKEN__SYMMETRIC = 628,
  PGQUERY__TOKEN__SYSID = 629,
  PGQUERY__TOKEN__SYSTEM_P = 630,
  PGQUERY__TOKEN__TABLE = 631,
  PGQUERY__TOKEN__TABLES = 632,
  PGQUERY__TOKEN__TABLESAMPLE = 633,
  PGQUERY__TOKEN__TABLESPACE = 634,
  PGQUERY__TOKEN__TEMP = 635,
  PGQUERY__TOKEN__TEMPLATE = 636,
  PGQUERY__TOKEN__TEMPORARY = 637,
  PGQUERY__TOKEN__TEXT_P = 638,
  PGQUERY__TOKEN__THEN = 639,
  PGQUERY__TOKEN__TIME = 640,
  PGQUERY__TOKEN__TIMESTAMP = 641,
  PGQUERY__TOKEN__TO = 642,
  PGQUERY__TOKEN__TRAILING = 643,
  PGQUERY__TOKEN__TRANSACTION = 644,
  PGQUERY__TOKEN__TRANSFORM = 645,
  PGQUERY__TOKEN__TREAT = 646,
  PGQUERY__TOKEN__TRIGGER = 647,
  PGQUERY__TOKEN__TRIM = 648,
  PGQUERY__TOKEN__TRUE_P = 649,
  PGQUERY__TOKEN__TRUNCATE = 650,
  PGQUERY__TOKEN__TRUSTED = 651,
  PGQUERY__TOKEN__TYPE_P = 652,
  PGQUERY__TOKEN__TYPES_P = 653,
  PGQUERY__TOKEN__UNBOUNDED = 654,
  PGQUERY__TOKEN__UNCOMMITTED = 655,
  PGQUERY__TOKEN__UNENCRYPTED = 656,
  PGQUERY__TOKEN__UNION = 657,
  PGQUERY__TOKEN__UNIQUE = 658,
  PGQUERY__TOKEN__UNKNOWN = 659,
  PGQUERY__TOKEN__UNLISTEN = 660,
  PGQUERY__TOKEN__UNLOGGED = 661,
  PGQUERY__TOKEN__UNTIL = 662,
  PGQUERY__TOKEN__UPDATE = 663,
  PGQUERY__TOKEN__USER = 664,
  PGQUERY__TOKEN__USING = 665,
  PGQUERY__TOKEN__VACUUM = 666,
  PGQUERY__TOKEN__VALID = 667,
  PGQUERY__TOKEN__VALIDATE = 668,
  PGQUERY__TOKEN__VALIDATOR = 669,
  PGQUERY__TOKEN__VALUE_P = 670,
  PGQUERY__TOKEN__VALUES = 671,
  PGQUERY__TOKEN__VARCHAR = 672,
  PGQUERY__TOKEN__VARIADIC = 673,
  PGQUERY__TOKEN__VARYING = 674,
  PGQUERY__TOKEN__VERBOSE = 675,
  PGQUERY__TOKEN__VERSION_P = 676,
  PGQUERY__TOKEN__VIEW = 677,
  PGQUERY__TOKEN__VIEWS = 678,
  PGQUERY__TOKEN__VOLATILE = 679,
  PGQUERY__TOKEN__WHEN = 680,
  PGQUERY__TOKEN__WHERE = 681,
  PGQUERY__TOKEN__WHITESPACE_P = 682,
  PGQUERY__TOKEN__WINDOW = 683,
  PGQUERY__TOKEN__WITH = 684,
  PGQUERY__TOKEN__WITHIN = 685,
  PGQUERY__TOKEN__WITHOUT = 686,
  PGQUERY__TOKEN__WORK = 687,
  PGQUERY__TOKEN__WRAPPER = 688,
  PGQUERY__TOKEN__WRITE = 689,
  PGQUERY__TOKEN__XML_P = 690,
  PGQUERY__TOKEN__XMLATTRIBUTES = 691,
  PGQUERY__TOKEN__XMLCONCAT = 692,
  PGQUERY__TOKEN__XMLELEMENT = 693,
  PGQUERY__TOKEN__XMLEXISTS = 694,
  PGQUERY__TOKEN__XMLFOREST = 695,
  PGQUERY__TOKEN__XMLNAMESPACES = 696,
  PGQUERY__TOKEN__XMLPARSE = 697,
  PGQUERY__TOKEN__XMLPI = 698,
  PGQUERY__TOKEN__XMLROOT = 699,
  PGQUERY__TOKEN__XMLSERIALIZE = 700,
  PGQUERY__TOKEN__XMLTABLE = 701,
  PGQUERY__TOKEN__YEAR_P = 702,
  PGQUERY__TOKEN__YES_P = 703,
  PGQUERY__TOKEN__ZONE = 704,
  PGQUERY__TOKEN__NOT_LA = 705,
  PGQUERY__TOKEN__NULLS_LA = 706,
  PGQUERY__TOKEN__WITH_LA = 707,
  PGQUERY__TOKEN__POSTFIXOP = 708,
  PGQUERY__TOKEN__UMINUS = 709
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PGQUERY__TOKEN)
} Pgquery__Token;

/* --- messages --- */

struct  _Pgquery__ScanToken
{
  ProtobufCMessage base;
  int32_t start;
  int32_t end;
  Pgquery__Token token;
  Pgquery__KeywordKind keyword_kind;
};
#define PGQUERY__SCAN_TOKEN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pgquery__scan_token__descriptor) \
    , 0, 0, PGQUERY__TOKEN__NUL, PGQUERY__KEYWORD_KIND__NO_KEYWORD }


struct  _Pgquery__ScanOutput
{
  ProtobufCMessage base;
  size_t n_tokens;
  Pgquery__ScanToken **tokens;
};
#define PGQUERY__SCAN_OUTPUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pgquery__scan_output__descriptor) \
    , 0,NULL }


/* Pgquery__ScanToken methods */
void   pgquery__scan_token__init
                     (Pgquery__ScanToken         *message);
size_t pgquery__scan_token__get_packed_size
                     (const Pgquery__ScanToken   *message);
size_t pgquery__scan_token__pack
                     (const Pgquery__ScanToken   *message,
                      uint8_t             *out);
size_t pgquery__scan_token__pack_to_buffer
                     (const Pgquery__ScanToken   *message,
                      ProtobufCBuffer     *buffer);
Pgquery__ScanToken *
       pgquery__scan_token__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pgquery__scan_token__free_unpacked
                     (Pgquery__ScanToken *message,
                      ProtobufCAllocator *allocator);
/* Pgquery__ScanOutput methods */
void   pgquery__scan_output__init
                     (Pgquery__ScanOutput         *message);
size_t pgquery__scan_output__get_packed_size
                     (const Pgquery__ScanOutput   *message);
size_t pgquery__scan_output__pack
                     (const Pgquery__ScanOutput   *message,
                      uint8_t             *out);
size_t pgquery__scan_output__pack_to_buffer
                     (const Pgquery__ScanOutput   *message,
                      ProtobufCBuffer     *buffer);
Pgquery__ScanOutput *
       pgquery__scan_output__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pgquery__scan_output__free_unpacked
                     (Pgquery__ScanOutput *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Pgquery__ScanToken_Closure)
                 (const Pgquery__ScanToken *message,
                  void *closure_data);
typedef void (*Pgquery__ScanOutput_Closure)
                 (const Pgquery__ScanOutput *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    pgquery__keyword_kind__descriptor;
extern const ProtobufCEnumDescriptor    pgquery__token__descriptor;
extern const ProtobufCMessageDescriptor pgquery__scan_token__descriptor;
extern const ProtobufCMessageDescriptor pgquery__scan_output__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_protobuf_2fscan_5foutput_2eproto__INCLUDED */
